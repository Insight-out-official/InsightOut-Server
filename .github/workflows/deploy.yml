# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy

on:
  push:
    branches: [dev, feature/#85/PID-85/infra]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v3

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}

      - name: Check Npm -v
        run: npm -v

      - name: create env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} >> .env
          echo FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }} >> .env
          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo REDIS_HOST_DEV=${{ secrets.REDIS_HOST_DEV }} >> .env
          echo REDIS_PORT_DEV=${{ secrets.REDIS_PORT_DEV }} >> .env
          echo SLACK_TOKEN=${{ secrets.SLACK_TOKEN }} >> .en
          cat .env

      - name: build server files
        working-directory: ./
        run: |
          yarn
          yarn run build
